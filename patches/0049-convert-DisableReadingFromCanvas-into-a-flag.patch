From 7341676cdee6bdaa20133560aab92ec22fef586b Mon Sep 17 00:00:00 2001
From: Douloureux <Douloureux@users.noreply.github.com>
Date: Sun, 11 Sep 2022 00:00:00 +0000
Subject: [PATCH] convert DisableReadingFromCanvas into a flag

---
 chrome/browser/about_flags.cc                     | 4 ++++
 chrome/browser/flag-metadata.json                 | 5 +++++
 chrome/browser/flag-never-expire-list.json        | 1 +
 chrome/browser/flag_descriptions.cc               | 5 +++++
 chrome/browser/flag_descriptions.h                | 3 +++
 content/browser/web_contents/web_contents_impl.cc | 2 +-
 content/public/common/content_features.cc         | 4 ++++
 content/public/common/content_features.h          | 1 +
 content/public/common/content_switches.cc         | 3 ---
 content/public/common/content_switches.h          | 1 -
 10 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/chrome/browser/about_flags.cc b/chrome/browser/about_flags.cc
index 7dd9f063438b5..1bb55d350fd7a 100644
--- a/chrome/browser/about_flags.cc
+++ b/chrome/browser/about_flags.cc
@@ -6150,6 +6150,10 @@ const FeatureEntry kFeatureEntries[] = {
      flag_descriptions::kV8NoJITDescription, kOsAll,
      FEATURE_VALUE_TYPE(features::kV8NoJIT)},
 
+    {"disable-reading-from-canvas", flag_descriptions::kDisableReadingFromCanvasName,
+     flag_descriptions::kDisableReadingFromCanvasDescription, kOsAll,
+      FEATURE_VALUE_TYPE(features::kDisableReadingFromCanvas)},
+
 #if !BUILDFLAG(IS_ANDROID)
     {"enable-accessibility-live-caption",
      flag_descriptions::kEnableAccessibilityLiveCaptionName,
diff --git a/chrome/browser/flag-metadata.json b/chrome/browser/flag-metadata.json
index 8d6a1af2a2c33..9285cd7dfa155 100644
--- a/chrome/browser/flag-metadata.json
+++ b/chrome/browser/flag-metadata.json
@@ -1380,6 +1380,11 @@
     "owners": [ "croissant-eng" ],
     "expiry_milestone": 100
   },
+  {
+    "name": "disable-reading-from-canvas",
+    "owners": [ "Douloureux@users.noreply.github.com" ],
+    "expiry_milestone": -1
+  },
   {
     "name": "disable-threaded-scrolling",
     "owners": [ "bokan", "input-dev" ],
diff --git a/chrome/browser/flag-never-expire-list.json b/chrome/browser/flag-never-expire-list.json
index 8642ff428394c..734eaf0441cc4 100644
--- a/chrome/browser/flag-never-expire-list.json
+++ b/chrome/browser/flag-never-expire-list.json
@@ -29,6 +29,7 @@
   "disable-buffer-bw-compression",
   "disable-explicit-dma-fences",
   "disable-javascript-harmony-shipping",
+  "disable-reading-from-canvas",
   "disable-threaded-scrolling",
   "disable-v8-jit",
   "disable-webrtc-hw-decoding",
diff --git a/chrome/browser/flag_descriptions.cc b/chrome/browser/flag_descriptions.cc
index 3c0e0f3ee832a..76e5e88c135b1 100644
--- a/chrome/browser/flag_descriptions.cc
+++ b/chrome/browser/flag_descriptions.cc
@@ -2946,6 +2946,11 @@ const char kV8NoJITDescription[] =
     "Security mode that disables all runtime allocation of "
     "executable memory";
 
+const char kDisableReadingFromCanvasName[] = "Disable reading from canvas";
+const char kDisableReadingFromCanvasDescription[] =
+    "Does not allow sites to read the HTML5 Canvas, preventing "
+    "canvas fingerprinting.";
+
 const char kV8VmFutureName[] = "Future V8 VM features";
 const char kV8VmFutureDescription[] =
     "This enables upcoming and experimental V8 VM features. "
diff --git a/chrome/browser/flag_descriptions.h b/chrome/browser/flag_descriptions.h
index 48fea392a5cad..0871b1f08da90 100644
--- a/chrome/browser/flag_descriptions.h
+++ b/chrome/browser/flag_descriptions.h
@@ -1647,6 +1647,9 @@ extern const char kUseSearchClickForRightClickDescription[];
 extern const char kV8NoJITName[];
 extern const char kV8NoJITDescription[];
 
+extern const char kDisableReadingFromCanvasName[];
+extern const char kDisableReadingFromCanvasDescription[];
+
 extern const char kV8VmFutureName[];
 extern const char kV8VmFutureDescription[];
 
diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index 8e1c0feede6dc..be7e1c0f9e614 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -2815,7 +2815,7 @@ const blink::web_pref::WebPreferences WebContentsImpl::ComputeWebPreferences() {
   prefs.stylus_handwriting_enabled = stylus_handwriting_enabled_;
 
   prefs.disable_reading_from_canvas =
-      command_line.HasSwitch(switches::kDisableReadingFromCanvas);
+      base::FeatureList::IsEnabled(features::kDisableReadingFromCanvas);
 
   prefs.strict_mixed_content_checking =
       command_line.HasSwitch(switches::kEnableStrictMixedContentChecking);
diff --git a/content/public/common/content_features.cc b/content/public/common/content_features.cc
index 4ecdb5f539283..32c9a488a0c7e 100644
--- a/content/public/common/content_features.cc
+++ b/content/public/common/content_features.cc
@@ -267,6 +267,10 @@ const base::Feature kDigitalGoodsApi {
 #endif
 };
 
+// Taints all <canvas> elements, regardless of origin.
+const base::Feature kDisableReadingFromCanvas {"DisableReadingFromCanvas",
+                                                base::FEATURE_DISABLED_BY_DEFAULT};
+
 // Enable document policy for configuring and restricting feature behavior.
 const base::Feature kDocumentPolicy{"DocumentPolicy",
                                     base::FEATURE_ENABLED_BY_DEFAULT};
diff --git a/content/public/common/content_features.h b/content/public/common/content_features.h
index 95586c2934bcb..95e6005cc5b40 100644
--- a/content/public/common/content_features.h
+++ b/content/public/common/content_features.h
@@ -69,6 +69,7 @@ CONTENT_EXPORT extern const base::Feature kDesktopCaptureLacrosV2;
 CONTENT_EXPORT extern const base::Feature kDesktopPWAsTabStrip;
 CONTENT_EXPORT extern const base::Feature kDevicePosture;
 CONTENT_EXPORT extern const base::Feature kDigitalGoodsApi;
+CONTENT_EXPORT extern const base::Feature kDisableReadingFromCanvas;
 CONTENT_EXPORT extern const base::Feature kDocumentPolicy;
 CONTENT_EXPORT extern const base::Feature kDocumentPolicyNegotiation;
 CONTENT_EXPORT extern const base::Feature kEarlyEstablishGpuChannel;
diff --git a/content/public/common/content_switches.cc b/content/public/common/content_switches.cc
index a37ce834f6f2f..06a170278088f 100644
--- a/content/public/common/content_switches.cc
+++ b/content/public/common/content_switches.cc
@@ -227,9 +227,6 @@ const char kDisablePresentationAPI[]        = "disable-presentation-api";
 // Disables throttling of history.pushState/replaceState calls.
 const char kDisablePushStateThrottle[] = "disable-pushstate-throttle";
 
-// Taints all <canvas> elements, regardless of origin.
-const char kDisableReadingFromCanvas[]      = "disable-reading-from-canvas";
-
 // Disables remote web font support. SVG font should always work whether this
 // option is specified or not.
 const char kDisableRemoteFonts[]            = "disable-remote-fonts";
diff --git a/content/public/common/content_switches.h b/content/public/common/content_switches.h
index 15488266b74cb..ba7dbd502fcf4 100644
--- a/content/public/common/content_switches.h
+++ b/content/public/common/content_switches.h
@@ -80,7 +80,6 @@ CONTENT_EXPORT extern const char kDisablePermissionsAPI[];
 CONTENT_EXPORT extern const char kDisablePinch[];
 CONTENT_EXPORT extern const char kDisablePresentationAPI[];
 CONTENT_EXPORT extern const char kDisablePushStateThrottle[];
-CONTENT_EXPORT extern const char kDisableReadingFromCanvas[];
 extern const char kDisableRemoteFonts[];
 CONTENT_EXPORT extern const char kDisableRemotePlaybackAPI[];
 extern const char kDisableRendererAccessibility[];
-- 
2.35.1.windows.2

